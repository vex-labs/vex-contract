This file contains a list of example commands to be run in near-cli-rs


The contract needs to be initialized with exactly 100 VEX

Create account 
near account create-account fund-myself contract.betvex.testnet '5 NEAR' use-manually-provided-public-key ed25519:2wdfLHDdRxF6yK9of1etPFJwC5ueC4Zc8rCTUhBaUcZm sign-as betvex.testnet network-config testnet sign-with-legacy-keychain send

send usdc to contract account to register
near tokens pivortex.testnet send-ft usdc.betvex.testnet contract.betvex.testnet amount-ft '1 USDC' prepaid-gas '100.0 Tgas' attached-deposit '1 yoctoNEAR' network-config testnet sign-with-legacy-keychain send

send 100 VEX to contract account
near tokens pivortex.testnet send-ft token.betvex.testnet contract.betvex.testnet amount-ft '100 VEX' prepaid-gas '100.0 Tgas' attached-deposit '1 yoctoNEAR' network-config testnet sign-with-legacy-keychain send

register the contract in ref-finance
near contract call-function as-transaction ref-finance-101.testnet storage_deposit json-args '{"account_id": "contract.betvex.testnet"}' prepaid-gas '100.0 Tgas' attached-deposit '0.1 NEAR' sign-as pivortex.testnet network-config testnet sign-with-legacy-keychain send

The tokens on testnet are whitelisted in ref-finance so you do not need to register the user and the contract with the tokens

deploy and init
cargo near deploy build-non-reproducible-wasm contract.betvex.testnet with-init-call init json-args '{"admin": "admin.betvex.testnet", "usdc_token_contract": "usdc.betvex.testnet", "vex_token_contract": "token.betvex.testnet", "treasury": "treasury.betvex.testnet", "ref_contract": "ref-finance-101.testnet", "ref_pool_id": "2197", "rewards_period": "60000000000", "unstake_time_buffer": "30000000000", "min_swap_amount": "1000000"}' prepaid-gas '100.0 Tgas' attached-deposit '0 NEAR' network-config testnet sign-with-legacy-keychain send

create_match
near contract call-function as-transaction contract.betvex.testnet create_match json-args '{"game": "Overwatch", "team_1": "a team", "team_2": "b team", "in_odds_1": 1.4, "in_odds_2": 2.9, "date": "28/08/2024"}' prepaid-gas '100.0 Tgas' attached-deposit '0 NEAR' sign-as admin.betvex.testnet network-config testnet sign-with-legacy-keychain send

end_betting
near contract call-function as-transaction contract.betvex.testnet end_betting json-args '{"match_id": "a team-b team-28/08/2024"}' prepaid-gas '100.0 Tgas' attached-deposit '0 NEAR' sign-as admin.betvex.testnet network-config testnet sign-with-legacy-keychain send

finish_match 
near contract call-function as-transaction contract.betvex.testnet finish_match json-args '{"match_id": "a team-b team-28/08/2024", "winner": "Team1"}' prepaid-gas '300.0 Tgas' attached-deposit '0 NEAR' sign-as admin.betvex.testnet network-config testnet sign-with-legacy-keychain send

bet on a match
near contract call-function as-transaction usdc.betvex.testnet ft_transfer_call json-args '{"receiver_id": "contract.betvex.testnet", "amount": "1000000", "msg": "{\"Bet\": {\"match_id\": \"a team-b team-28/08/2024\", \"team\": \"Team1\"}}"}' prepaid-gas '100.0 Tgas' attached-deposit '1 yoctoNEAR' sign-as pivortex.testnet network-config testnet sign-with-legacy-keychain send
